/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import EncounterPackage.Encounter;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import static ui.PatientWorkAreaJFrame.encHist;

/**
 *
 * @author Rohit Paul G
 */
public class DoctorWorkAreaJFrame extends javax.swing.JFrame {

    /**
     * Creates new form DoctorWorkAreaJFrame
     */
    public DoctorWorkAreaJFrame() {
        initComponents();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DoctorWorkSpaceSplitPane = new javax.swing.JSplitPane();
        DoctorToolBar = new javax.swing.JPanel();
        btnDoctorLogOut = new javax.swing.JButton();
        DoctorWorkArea = new javax.swing.JPanel();
        DoctorWork = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PatientEncountersjTableForDoctors = new javax.swing.JTable();
        btnViewEncountersForDoctor = new javax.swing.JButton();
        lblPatientEncounterFName = new javax.swing.JLabel();
        lblPatientEncounterID = new javax.swing.JLabel();
        lblPatientEncounterTime = new javax.swing.JLabel();
        lblPatientEncounterBloodType = new javax.swing.JLabel();
        lblPatientEncounterAdmitDate = new javax.swing.JLabel();
        lblPatientEncounterSymptoms = new javax.swing.JLabel();
        txtPatientEncounterFName = new javax.swing.JTextField();
        txtPatientEncounterID = new javax.swing.JTextField();
        txtPatientEncounterTime = new javax.swing.JTextField();
        txtPatientEncounterBloodType = new javax.swing.JTextField();
        txtPatientEncounterAdmitDate = new javax.swing.JTextField();
        txtPatientEncounterSymptoms = new javax.swing.JTextField();
        lblDoctorVitalSigns = new javax.swing.JLabel();
        lbltemperature = new javax.swing.JLabel();
        lblbloodPressure = new javax.swing.JLabel();
        lblheartRate = new javax.swing.JLabel();
        txttemperature = new javax.swing.JTextField();
        txtbloodPressure = new javax.swing.JTextField();
        txtheartRate = new javax.swing.JTextField();
        btnSaveVitalSigns = new javax.swing.JButton();
        btnViewVitalSigns = new javax.swing.JButton();
        ViewVitalsArea = new javax.swing.JPanel();
        btnBackToDoctorMainPage = new javax.swing.JButton();
        lblDoctorViewVitalSigns = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        DoctorToolBar.setBackground(new java.awt.Color(205, 209, 228));

        btnDoctorLogOut.setText("Log Out");
        btnDoctorLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorToolBarLayout = new javax.swing.GroupLayout(DoctorToolBar);
        DoctorToolBar.setLayout(DoctorToolBarLayout);
        DoctorToolBarLayout.setHorizontalGroup(
            DoctorToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorToolBarLayout.createSequentialGroup()
                .addComponent(btnDoctorLogOut)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        DoctorToolBarLayout.setVerticalGroup(
            DoctorToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorToolBarLayout.createSequentialGroup()
                .addContainerGap(612, Short.MAX_VALUE)
                .addComponent(btnDoctorLogOut)
                .addGap(107, 107, 107))
        );

        DoctorWorkSpaceSplitPane.setLeftComponent(DoctorToolBar);

        DoctorWorkArea.setLayout(new java.awt.CardLayout());

        DoctorWork.setBackground(new java.awt.Color(228, 241, 254));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 3, 26)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 153, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("~ Hello Doctor ~");

        PatientEncountersjTableForDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Encounter ID", "Encounter Time", "Blood Type", "Admit Date", "Symptoms"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(PatientEncountersjTableForDoctors);

        btnViewEncountersForDoctor.setText("View Encounters");

        lblPatientEncounterFName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterFName.setText("Patient Name:");

        lblPatientEncounterID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterID.setText("Encounter ID:");

        lblPatientEncounterTime.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterTime.setText("Encounter Time:");

        lblPatientEncounterBloodType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterBloodType.setText("Blood Type:");

        lblPatientEncounterAdmitDate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterAdmitDate.setText("Admit Date:");

        lblPatientEncounterSymptoms.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterSymptoms.setText("Symptoms:");

        lblDoctorVitalSigns.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblDoctorVitalSigns.setForeground(new java.awt.Color(51, 102, 0));
        lblDoctorVitalSigns.setText("Initiate Vitals:");

        lbltemperature.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbltemperature.setText("Temperature:");

        lblbloodPressure.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblbloodPressure.setText("Blood Pressure:");

        lblheartRate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblheartRate.setText("Heart Rate:");

        btnSaveVitalSigns.setText("Save Vitals");

        btnViewVitalSigns.setText("View Vitals");

        javax.swing.GroupLayout DoctorWorkLayout = new javax.swing.GroupLayout(DoctorWork);
        DoctorWork.setLayout(DoctorWorkLayout);
        DoctorWorkLayout.setHorizontalGroup(
            DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorWorkLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorWorkLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorWorkLayout.createSequentialGroup()
                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DoctorWorkLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnViewEncountersForDoctor)
                            .addGroup(DoctorWorkLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPatientEncounterFName)
                                    .addComponent(lblPatientEncounterID))
                                .addGap(18, 18, 18)
                                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPatientEncounterID, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(txtPatientEncounterFName)))
                            .addGroup(DoctorWorkLayout.createSequentialGroup()
                                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPatientEncounterBloodType)
                                    .addComponent(lblPatientEncounterTime)
                                    .addComponent(lblPatientEncounterAdmitDate)
                                    .addComponent(lblPatientEncounterSymptoms))
                                .addGap(18, 18, 18)
                                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPatientEncounterTime)
                                    .addComponent(txtPatientEncounterBloodType)
                                    .addComponent(txtPatientEncounterAdmitDate)
                                    .addComponent(txtPatientEncounterSymptoms, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))))
                        .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DoctorWorkLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbltemperature, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblbloodPressure, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblheartRate, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(192, 192, 192))
                            .addGroup(DoctorWorkLayout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(btnSaveVitalSigns)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewVitalSigns))))
                    .addGroup(DoctorWorkLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDoctorVitalSigns)
                        .addGap(18, 18, 18)
                        .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txttemperature)
                            .addComponent(txtbloodPressure)
                            .addComponent(txtheartRate, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))))
                .addGap(100, 100, 100))
        );
        DoctorWorkLayout.setVerticalGroup(
            DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorWorkLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewEncountersForDoctor)
                .addGap(2, 2, 2)
                .addComponent(lblDoctorVitalSigns)
                .addGap(18, 18, 18)
                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEncounterFName)
                    .addComponent(txtPatientEncounterFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbltemperature)
                    .addComponent(txttemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEncounterID)
                    .addComponent(txtPatientEncounterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblbloodPressure)
                    .addComponent(txtbloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEncounterTime)
                    .addComponent(txtPatientEncounterTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblheartRate)
                    .addComponent(txtheartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEncounterBloodType)
                    .addComponent(txtPatientEncounterBloodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEncounterAdmitDate)
                    .addComponent(txtPatientEncounterAdmitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveVitalSigns)
                    .addComponent(btnViewVitalSigns))
                .addGap(19, 19, 19)
                .addGroup(DoctorWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientEncounterSymptoms)
                    .addComponent(txtPatientEncounterSymptoms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(189, Short.MAX_VALUE))
        );

        DoctorWorkArea.add(DoctorWork, "card2");

        ViewVitalsArea.setBackground(new java.awt.Color(228, 241, 254));

        btnBackToDoctorMainPage.setText("<< Back");
        btnBackToDoctorMainPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackToDoctorMainPageMouseClicked(evt);
            }
        });
        btnBackToDoctorMainPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToDoctorMainPageActionPerformed(evt);
            }
        });

        lblDoctorViewVitalSigns.setFont(new java.awt.Font("Segoe UI", 3, 26)); // NOI18N
        lblDoctorViewVitalSigns.setForeground(new java.awt.Color(51, 102, 0));
        lblDoctorViewVitalSigns.setText("~ View Vitals ~");

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        jLabel5.setText("jLabel5");

        jLabel6.setText("jLabel6");

        jLabel7.setText("jLabel7");

        jLabel8.setText("jLabel8");

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        jTextField3.setText("jTextField3");

        jTextField4.setText("jTextField4");

        jTextField5.setText("jTextField5");

        jTextField6.setText("jTextField6");

        jTextField7.setText("jTextField7");

        jTextField8.setText("jTextField8");

        javax.swing.GroupLayout ViewVitalsAreaLayout = new javax.swing.GroupLayout(ViewVitalsArea);
        ViewVitalsArea.setLayout(ViewVitalsAreaLayout);
        ViewVitalsAreaLayout.setHorizontalGroup(
            ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewVitalsAreaLayout.createSequentialGroup()
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewVitalsAreaLayout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(btnBackToDoctorMainPage))
                    .addGroup(ViewVitalsAreaLayout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(lblDoctorViewVitalSigns))
                    .addGroup(ViewVitalsAreaLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(27, 27, 27)
                        .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                            .addComponent(jTextField2)
                            .addComponent(jTextField3)
                            .addComponent(jTextField4)
                            .addComponent(jTextField5)
                            .addComponent(jTextField6)
                            .addComponent(jTextField7)
                            .addComponent(jTextField8))))
                .addContainerGap(288, Short.MAX_VALUE))
        );

        ViewVitalsAreaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8});

        ViewVitalsAreaLayout.setVerticalGroup(
            ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewVitalsAreaLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ViewVitalsAreaLayout.createSequentialGroup()
                        .addComponent(lblDoctorViewVitalSigns)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel1))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(ViewVitalsAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(btnBackToDoctorMainPage)
                .addGap(104, 104, 104))
        );

        ViewVitalsAreaLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8});

        DoctorWorkArea.add(ViewVitalsArea, "card3");

        DoctorWorkSpaceSplitPane.setRightComponent(DoctorWorkArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(DoctorWorkSpaceSplitPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DoctorWorkSpaceSplitPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoctorLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorLogOutActionPerformed
        // TODO add your handling code here:
        LoginJFrame lgFrame = new LoginJFrame();
        lgFrame.setVisible(true);
        lgFrame.pack();
        lgFrame.setLocationRelativeTo(null);
        lgFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btnDoctorLogOutActionPerformed

    private void btnBackToDoctorMainPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackToDoctorMainPageMouseClicked
        // TODO add your handling code here:
        //PatientWorkArea.removeAll();
        //PatientWorkArea.add(PatientWork);
        //PatientWorkArea.repaint();
        //PatientWorkArea.revalidate();
        //populateTable();
        DoctorWorkArea.removeAll();
        DoctorWorkArea.add(DoctorWork);
        DoctorWorkArea.repaint();
        DoctorWorkArea.revalidate();

    }//GEN-LAST:event_btnBackToDoctorMainPageMouseClicked

    private void btnBackToDoctorMainPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToDoctorMainPageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackToDoctorMainPageActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DoctorWorkAreaJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DoctorToolBar;
    private javax.swing.JPanel DoctorWork;
    private javax.swing.JPanel DoctorWorkArea;
    private javax.swing.JSplitPane DoctorWorkSpaceSplitPane;
    private javax.swing.JTable PatientEncountersjTableForDoctors;
    private javax.swing.JPanel ViewVitalsArea;
    private javax.swing.JButton btnBackToDoctorMainPage;
    private javax.swing.JButton btnDoctorLogOut;
    private javax.swing.JButton btnSaveVitalSigns;
    private javax.swing.JButton btnViewEncountersForDoctor;
    private javax.swing.JButton btnViewVitalSigns;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lblDoctorViewVitalSigns;
    private javax.swing.JLabel lblDoctorVitalSigns;
    private javax.swing.JLabel lblPatientEncounterAdmitDate;
    private javax.swing.JLabel lblPatientEncounterBloodType;
    private javax.swing.JLabel lblPatientEncounterFName;
    private javax.swing.JLabel lblPatientEncounterID;
    private javax.swing.JLabel lblPatientEncounterSymptoms;
    private javax.swing.JLabel lblPatientEncounterTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblbloodPressure;
    private javax.swing.JLabel lblheartRate;
    private javax.swing.JLabel lbltemperature;
    private javax.swing.JTextField txtPatientEncounterAdmitDate;
    private javax.swing.JTextField txtPatientEncounterBloodType;
    private javax.swing.JTextField txtPatientEncounterFName;
    private javax.swing.JTextField txtPatientEncounterID;
    private javax.swing.JTextField txtPatientEncounterSymptoms;
    private javax.swing.JTextField txtPatientEncounterTime;
    private javax.swing.JTextField txtbloodPressure;
    private javax.swing.JTextField txtheartRate;
    private javax.swing.JTextField txttemperature;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)PatientEncountersjTableForDoctors.getModel();
        model.setRowCount(0); //deleting the empty records in our JTable
        
        if (encHist.getEncounterList()!= null){
            for (Encounter enco1 : encHist.getEncounterList()){
                Object[] row1 = new Object[6];
                
                row1[0] = enco1.getfName();
                row1[1] = enco1.getEncounterId();
                row1[2] = enco1.getEncounterTime();
                row1[3] = enco1.getBloodType();
                row1[4] = enco1.getAdmitDate();
                row1[5] = enco1.getSymptoms();
                
                model.addRow(row1);
            }
        }
    }
}

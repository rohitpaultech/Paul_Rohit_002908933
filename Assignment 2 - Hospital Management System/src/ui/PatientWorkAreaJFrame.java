/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import DoctorPackage.Doctor;
import EncounterPackage.Encounter;
import EncounterPackage.EncounterHistory;
import PatientPackage.Patient;
import PersonPackage.Person;
import VitalsPackage.VitalSigns;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static ui.DoctorWorkAreaJFrame.vsignsHist;
//import static ui.LoginJFrame.doc;
import static ui.LoginJFrame.per;
import static ui.RegistrationJFrame.docDr;

/**
 *
 * @author Rohit Paul G
 */
public class PatientWorkAreaJFrame extends javax.swing.JFrame {
    Person personToWorkWith = LoginJFrame.per;
    Doctor doctorToWorkWith = LoginJFrame.doc;
    EncounterHistory encounterList;
   public static EncounterHistory encHist = new EncounterHistory();
    
    
   
    
            //LoginJFrame.per;
    /**
     * Creates new form PatientWorkAreaJFrame
     */
    
    
    public PatientWorkAreaJFrame() {
        initComponents();
        
        displayData();
        //PatientWork = displayData();
        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PatientWorkSpaceSplitPane = new javax.swing.JSplitPane();
        PatientToolBar = new javax.swing.JPanel();
        btnPatientLogOut = new javax.swing.JButton();
        PatientWorkArea = new javax.swing.JPanel();
        PatientWork = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PatientEncountersjTable = new javax.swing.JTable();
        btnCreateEncounter = new javax.swing.JButton();
        btnViewPatientVitals = new javax.swing.JButton();
        AddEncounter = new javax.swing.JPanel();
        lblTitle1 = new javax.swing.JLabel();
        lblPatientID = new javax.swing.JLabel();
        lblPatientFName = new javax.swing.JLabel();
        lblPatientLName = new javax.swing.JLabel();
        lblPatientAge = new javax.swing.JLabel();
        lblPatientMobilePhn = new javax.swing.JLabel();
        lblPatientListOfDoctors = new javax.swing.JLabel();
        txtPatientID = new javax.swing.JTextField();
        txtPatientFName = new javax.swing.JTextField();
        txtPatientLName = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        txtPatientMobilePhn = new javax.swing.JTextField();
        txtPatientListOfDoctors = new javax.swing.JComboBox<>();
        lblPatientEncounterID = new javax.swing.JLabel();
        lblPatientEncounterTime = new javax.swing.JLabel();
        lblPatientBloodType = new javax.swing.JLabel();
        lblPatientAdmitDate = new javax.swing.JLabel();
        lblPatientSymptoms = new javax.swing.JLabel();
        txtPatientEncounterID = new javax.swing.JTextField();
        txtPatientEncounterTime = new javax.swing.JTextField();
        txtPatientBloodType = new javax.swing.JTextField();
        txtPatientAdmitDate = new javax.swing.JTextField();
        txtPatientSymptoms = new javax.swing.JTextField();
        btnSubmitEncounter = new javax.swing.JButton();
        btnBackToPatientMainPage = new javax.swing.JButton();
        PatientVitalsReport = new javax.swing.JPanel();
        lblTitle3 = new javax.swing.JLabel();
        lblVitalSignsPatientFName = new javax.swing.JLabel();
        txtVitalsPatientFName = new javax.swing.JTextField();
        lblVitalSignsPatientEncounterID = new javax.swing.JLabel();
        txtVitalsPatientEncounterID = new javax.swing.JTextField();
        lblVitalSignsPatientEncounterTime = new javax.swing.JLabel();
        txtVitalsPatientEncounterTime = new javax.swing.JTextField();
        lblVitalSignsPatientEncounterBloodType = new javax.swing.JLabel();
        txtVitalsPatientEncounterBloodType = new javax.swing.JTextField();
        lblVitalSignsPatientEncounterSymptoms = new javax.swing.JLabel();
        txtVitalsPatientEncounterSymptoms = new javax.swing.JTextField();
        lblVitalSignsPatientTemperature = new javax.swing.JLabel();
        txtVitalsPatientTemperature = new javax.swing.JTextField();
        lblVitalSignsPatientBloodPressure = new javax.swing.JLabel();
        txtVitalsPatientBloodPressure = new javax.swing.JTextField();
        lblVitalSignsPatientHeartRate = new javax.swing.JLabel();
        txtVitalsPatientHeartRate = new javax.swing.JTextField();
        btnBackToPatientMainPage1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setUndecorated(true);

        PatientToolBar.setBackground(new java.awt.Color(205, 209, 228));

        btnPatientLogOut.setText("Log Out");
        btnPatientLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientLogOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientToolBarLayout = new javax.swing.GroupLayout(PatientToolBar);
        PatientToolBar.setLayout(PatientToolBarLayout);
        PatientToolBarLayout.setHorizontalGroup(
            PatientToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientToolBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnPatientLogOut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PatientToolBarLayout.setVerticalGroup(
            PatientToolBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientToolBarLayout.createSequentialGroup()
                .addContainerGap(512, Short.MAX_VALUE)
                .addComponent(btnPatientLogOut)
                .addGap(107, 107, 107))
        );

        PatientWorkSpaceSplitPane.setLeftComponent(PatientToolBar);

        PatientWorkArea.setLayout(new java.awt.CardLayout());

        PatientWork.setBackground(new java.awt.Color(228, 241, 254));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 3, 26)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 153, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("~ Hello Patient ~");

        PatientEncountersjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Patient ID", "List Of Doctors", "Encounter ID", "Encounter Time", "Blood Type", "Admit Date", "Symptoms"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PatientEncountersjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PatientEncountersjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(PatientEncountersjTable);

        btnCreateEncounter.setText("Create Encounter");
        btnCreateEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEncounterActionPerformed(evt);
            }
        });

        btnViewPatientVitals.setText("View Patient Vitals");
        btnViewPatientVitals.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewPatientVitalsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PatientWorkLayout = new javax.swing.GroupLayout(PatientWork);
        PatientWork.setLayout(PatientWorkLayout);
        PatientWorkLayout.setHorizontalGroup(
            PatientWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PatientWorkLayout.createSequentialGroup()
                .addGroup(PatientWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientWorkLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PatientWorkLayout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addGroup(PatientWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnViewPatientVitals)
                            .addComponent(btnCreateEncounter))))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        PatientWorkLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCreateEncounter, btnViewPatientVitals});

        PatientWorkLayout.setVerticalGroup(
            PatientWorkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientWorkLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblTitle)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(btnCreateEncounter)
                .addGap(50, 50, 50)
                .addComponent(btnViewPatientVitals)
                .addContainerGap(116, Short.MAX_VALUE))
        );

        PatientWorkArea.add(PatientWork, "card2");

        AddEncounter.setBackground(new java.awt.Color(228, 241, 254));

        lblTitle1.setFont(new java.awt.Font("Segoe UI", 3, 26)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(0, 153, 153));
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("~ Encounter Creation ~");

        lblPatientID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientID.setText("Patient ID:");

        lblPatientFName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientFName.setText("First Name:");

        lblPatientLName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientLName.setText("Last Name:");

        lblPatientAge.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientAge.setText("Age:");

        lblPatientMobilePhn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientMobilePhn.setText("Mobile Phone:");

        lblPatientListOfDoctors.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientListOfDoctors.setText("List Of Doctors:");

        txtPatientListOfDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientListOfDoctorsActionPerformed(evt);
            }
        });

        lblPatientEncounterID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterID.setText("Encounter ID:");

        lblPatientEncounterTime.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientEncounterTime.setText("Encounter Time:");

        lblPatientBloodType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientBloodType.setText("Blood Type:");

        lblPatientAdmitDate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientAdmitDate.setText("Admit Date:");

        lblPatientSymptoms.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblPatientSymptoms.setText("Symptoms:");

        btnSubmitEncounter.setText("Submit Encounter");
        btnSubmitEncounter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSubmitEncounterMouseClicked(evt);
            }
        });
        btnSubmitEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitEncounterActionPerformed(evt);
            }
        });

        btnBackToPatientMainPage.setText("<< Back");
        btnBackToPatientMainPage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackToPatientMainPageMouseClicked(evt);
            }
        });
        btnBackToPatientMainPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToPatientMainPageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddEncounterLayout = new javax.swing.GroupLayout(AddEncounter);
        AddEncounter.setLayout(AddEncounterLayout);
        AddEncounterLayout.setHorizontalGroup(
            AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddEncounterLayout.createSequentialGroup()
                .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEncounterLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AddEncounterLayout.createSequentialGroup()
                                .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPatientMobilePhn)
                                    .addComponent(lblPatientAge)
                                    .addComponent(lblPatientLName)
                                    .addComponent(lblPatientFName)
                                    .addComponent(lblPatientID))
                                .addGap(18, 18, 18)
                                .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPatientFName)
                                    .addComponent(txtPatientLName)
                                    .addComponent(txtPatientMobilePhn, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(txtPatientID)
                                    .addComponent(txtPatientAge)))
                            .addGroup(AddEncounterLayout.createSequentialGroup()
                                .addComponent(lblPatientListOfDoctors)
                                .addGap(18, 18, 18)
                                .addComponent(txtPatientListOfDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(99, 99, 99)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPatientEncounterID)
                            .addComponent(lblPatientEncounterTime)
                            .addComponent(lblPatientBloodType)
                            .addComponent(lblPatientAdmitDate)
                            .addComponent(lblPatientSymptoms))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPatientSymptoms, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtPatientAdmitDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                .addComponent(txtPatientBloodType, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPatientEncounterTime, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPatientEncounterID, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(AddEncounterLayout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(btnSubmitEncounter))
                    .addGroup(AddEncounterLayout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(btnBackToPatientMainPage)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        AddEncounterLayout.setVerticalGroup(
            AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEncounterLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTitle1)
                .addGap(38, 38, 38)
                .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEncounterLayout.createSequentialGroup()
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientID)
                            .addComponent(txtPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientFName)
                            .addComponent(txtPatientFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientLName)
                            .addComponent(txtPatientLName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientAge)
                            .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientMobilePhn)
                            .addComponent(txtPatientMobilePhn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientListOfDoctors)
                            .addComponent(txtPatientListOfDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AddEncounterLayout.createSequentialGroup()
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientEncounterID)
                            .addComponent(txtPatientEncounterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientEncounterTime)
                            .addComponent(txtPatientEncounterTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientBloodType)
                            .addComponent(txtPatientBloodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientAdmitDate)
                            .addComponent(txtPatientAdmitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientSymptoms)
                            .addComponent(txtPatientSymptoms, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(btnSubmitEncounter)
                .addGap(30, 30, 30)
                .addComponent(btnBackToPatientMainPage)
                .addGap(34, 34, 34))
        );

        PatientWorkArea.add(AddEncounter, "card3");

        PatientVitalsReport.setBackground(new java.awt.Color(228, 241, 254));

        lblTitle3.setFont(new java.awt.Font("Segoe UI", 3, 26)); // NOI18N
        lblTitle3.setForeground(new java.awt.Color(0, 153, 153));
        lblTitle3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle3.setText("~ Patient Vitals Report ~");

        lblVitalSignsPatientFName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientFName.setText("Patient Name:");

        lblVitalSignsPatientEncounterID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientEncounterID.setText("Patient Encounter ID:");

        lblVitalSignsPatientEncounterTime.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientEncounterTime.setText("Patient Encounter Time:");

        lblVitalSignsPatientEncounterBloodType.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientEncounterBloodType.setText("Patient Blood Type:");

        lblVitalSignsPatientEncounterSymptoms.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientEncounterSymptoms.setText("Patient's Symptoms:");

        lblVitalSignsPatientTemperature.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientTemperature.setText("Recorded Temperature:");

        lblVitalSignsPatientBloodPressure.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientBloodPressure.setText("Recorded Blood Pressure:");

        lblVitalSignsPatientHeartRate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblVitalSignsPatientHeartRate.setText("Recorded Heart Rate:");

        btnBackToPatientMainPage1.setText("<< Back");
        btnBackToPatientMainPage1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBackToPatientMainPage1MouseClicked(evt);
            }
        });
        btnBackToPatientMainPage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToPatientMainPage1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientVitalsReportLayout = new javax.swing.GroupLayout(PatientVitalsReport);
        PatientVitalsReport.setLayout(PatientVitalsReportLayout);
        PatientVitalsReportLayout.setHorizontalGroup(
            PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientVitalsReportLayout.createSequentialGroup()
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientVitalsReportLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitle3, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE))
                    .addGroup(PatientVitalsReportLayout.createSequentialGroup()
                        .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PatientVitalsReportLayout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblVitalSignsPatientEncounterBloodType)
                                    .addComponent(lblVitalSignsPatientTemperature)
                                    .addComponent(lblVitalSignsPatientBloodPressure)
                                    .addComponent(lblVitalSignsPatientHeartRate)
                                    .addComponent(lblVitalSignsPatientFName)
                                    .addComponent(lblVitalSignsPatientEncounterID)
                                    .addComponent(lblVitalSignsPatientEncounterTime)
                                    .addComponent(lblVitalSignsPatientEncounterSymptoms))
                                .addGap(65, 65, 65)
                                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtVitalsPatientFName)
                                    .addComponent(txtVitalsPatientEncounterID)
                                    .addComponent(txtVitalsPatientEncounterTime)
                                    .addComponent(txtVitalsPatientEncounterBloodType)
                                    .addComponent(txtVitalsPatientEncounterSymptoms)
                                    .addComponent(txtVitalsPatientTemperature)
                                    .addComponent(txtVitalsPatientBloodPressure)
                                    .addComponent(txtVitalsPatientHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PatientVitalsReportLayout.createSequentialGroup()
                                .addGap(298, 298, 298)
                                .addComponent(btnBackToPatientMainPage1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        PatientVitalsReportLayout.setVerticalGroup(
            PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientVitalsReportLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblTitle3)
                .addGap(58, 58, 58)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtVitalsPatientFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVitalSignsPatientFName))
                .addGap(21, 21, 21)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVitalSignsPatientEncounterID)
                    .addComponent(txtVitalsPatientEncounterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVitalSignsPatientEncounterTime)
                    .addComponent(txtVitalsPatientEncounterTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVitalSignsPatientEncounterBloodType)
                    .addComponent(txtVitalsPatientEncounterBloodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVitalSignsPatientEncounterSymptoms)
                    .addComponent(txtVitalsPatientEncounterSymptoms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVitalSignsPatientTemperature)
                    .addComponent(txtVitalsPatientTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVitalSignsPatientBloodPressure)
                    .addComponent(txtVitalsPatientBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(PatientVitalsReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVitalsPatientHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVitalSignsPatientHeartRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(btnBackToPatientMainPage1)
                .addGap(34, 34, 34))
        );

        PatientWorkArea.add(PatientVitalsReport, "card4");

        PatientWorkSpaceSplitPane.setRightComponent(PatientWorkArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PatientWorkSpaceSplitPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PatientWorkSpaceSplitPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPatientLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientLogOutActionPerformed
        // TODO add your handling code here:
        LoginJFrame lgFrame = new LoginJFrame();
        lgFrame.setVisible(true);
        lgFrame.pack();
        lgFrame.setLocationRelativeTo(null);
        lgFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btnPatientLogOutActionPerformed

    private void PatientEncountersjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PatientEncountersjTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PatientEncountersjTableMouseClicked

    private void btnCreateEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEncounterActionPerformed
        // TODO add your handling code here:
        PatientWorkArea.removeAll();
        PatientWorkArea.add(AddEncounter);
        PatientWorkArea.repaint();
        PatientWorkArea.revalidate();
        //Patient p = checkMyPerson()
        //Patient rgfr = checkMyPatient();
        
        
    }//GEN-LAST:event_btnCreateEncounterActionPerformed

    private void btnBackToPatientMainPageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackToPatientMainPageMouseClicked
        // TODO add your handling code here:
        PatientWorkArea.removeAll();
        PatientWorkArea.add(PatientWork);
        PatientWorkArea.repaint();
        PatientWorkArea.revalidate();
        populateTable();
        
    }//GEN-LAST:event_btnBackToPatientMainPageMouseClicked

    private void btnBackToPatientMainPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToPatientMainPageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackToPatientMainPageActionPerformed

    private void btnSubmitEncounterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubmitEncounterMouseClicked
        // TODO add your handling code here:
       Encounter enc = new Encounter();
       
       enc.setPatientId(txtPatientID.getText());
       enc.setfName(txtPatientFName.getText());
       enc.setlName(txtPatientLName.getText());
       enc.setAge(Integer.parseInt(txtPatientAge.getText()));
       enc.setMobilePhn(Long.parseLong(txtPatientMobilePhn.getText()));
       enc.setListOfDoctors(txtPatientListOfDoctors.getSelectedItem().toString());
       enc.setEncounterId(txtPatientEncounterID.getText());
       enc.setEncounterTime(txtPatientEncounterTime.getText());
       enc.setBloodType(txtPatientBloodType.getText());
       enc.setAdmitDate(txtPatientAdmitDate.getText());
       enc.setSymptoms(txtPatientSymptoms.getText());
       encHist.addNewEncounter(enc);
       
       
       JOptionPane.showMessageDialog(this, "New Encounter Added!");
       
       vanishDataInEncounterCreation();
         
    }//GEN-LAST:event_btnSubmitEncounterMouseClicked

    private void btnSubmitEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitEncounterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSubmitEncounterActionPerformed

    private void txtPatientListOfDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientListOfDoctorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientListOfDoctorsActionPerformed

    private void btnBackToPatientMainPage1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackToPatientMainPage1MouseClicked
        // TODO add your handling code here:
        PatientWorkArea.removeAll();
        PatientWorkArea.add(AddEncounter);
        PatientWorkArea.repaint();
        PatientWorkArea.revalidate();
    }//GEN-LAST:event_btnBackToPatientMainPage1MouseClicked

    private void btnBackToPatientMainPage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToPatientMainPage1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackToPatientMainPage1ActionPerformed

    private void btnViewPatientVitalsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewPatientVitalsMouseClicked
        // TODO add your handling code here:
        
        PatientWorkArea.removeAll();
        PatientWorkArea.add(PatientVitalsReport);
        PatientWorkArea.repaint();
        PatientWorkArea.revalidate();
        
        if (encHist.getEncounterList() != null){
            for (Encounter enco4 : encHist.getEncounterList()){
                txtVitalsPatientFName.setText(enco4.getfName());
                txtVitalsPatientEncounterID.setText(enco4.getEncounterId());
                txtVitalsPatientEncounterTime.setText(enco4.getEncounterTime());
                txtVitalsPatientEncounterBloodType.setText(enco4.getBloodType());
                txtVitalsPatientEncounterSymptoms.setText(enco4.getSymptoms());
            }
        }
        
        if (vsignsHist.getVitalslist() != null){
            for (VitalSigns vs1 : vsignsHist.getVitalslist()){
                txtVitalsPatientTemperature.setText(vs1.getTemperature());
                txtVitalsPatientBloodPressure.setText(vs1.getBloodPressure());
                txtVitalsPatientHeartRate.setText(vs1.getHeartRate());
            }
        }
    }//GEN-LAST:event_btnViewPatientVitalsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientWorkAreaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientWorkAreaJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddEncounter;
    private javax.swing.JTable PatientEncountersjTable;
    private javax.swing.JPanel PatientToolBar;
    private javax.swing.JPanel PatientVitalsReport;
    private javax.swing.JPanel PatientWork;
    private javax.swing.JPanel PatientWorkArea;
    private javax.swing.JSplitPane PatientWorkSpaceSplitPane;
    private javax.swing.JButton btnBackToPatientMainPage;
    private javax.swing.JButton btnBackToPatientMainPage1;
    private javax.swing.JButton btnCreateEncounter;
    private javax.swing.JButton btnPatientLogOut;
    private javax.swing.JButton btnSubmitEncounter;
    private javax.swing.JButton btnViewPatientVitals;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPatientAdmitDate;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientBloodType;
    private javax.swing.JLabel lblPatientEncounterID;
    private javax.swing.JLabel lblPatientEncounterTime;
    private javax.swing.JLabel lblPatientFName;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientLName;
    private javax.swing.JLabel lblPatientListOfDoctors;
    private javax.swing.JLabel lblPatientMobilePhn;
    private javax.swing.JLabel lblPatientSymptoms;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTitle3;
    private javax.swing.JLabel lblVitalSignsPatientBloodPressure;
    private javax.swing.JLabel lblVitalSignsPatientEncounterBloodType;
    private javax.swing.JLabel lblVitalSignsPatientEncounterID;
    private javax.swing.JLabel lblVitalSignsPatientEncounterSymptoms;
    private javax.swing.JLabel lblVitalSignsPatientEncounterTime;
    private javax.swing.JLabel lblVitalSignsPatientFName;
    private javax.swing.JLabel lblVitalSignsPatientHeartRate;
    private javax.swing.JLabel lblVitalSignsPatientTemperature;
    private javax.swing.JTextField txtPatientAdmitDate;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientBloodType;
    private javax.swing.JTextField txtPatientEncounterID;
    private javax.swing.JTextField txtPatientEncounterTime;
    private javax.swing.JTextField txtPatientFName;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientLName;
    public static javax.swing.JComboBox<String> txtPatientListOfDoctors;
    private javax.swing.JTextField txtPatientMobilePhn;
    private javax.swing.JTextField txtPatientSymptoms;
    private javax.swing.JTextField txtVitalsPatientBloodPressure;
    private javax.swing.JTextField txtVitalsPatientEncounterBloodType;
    private javax.swing.JTextField txtVitalsPatientEncounterID;
    private javax.swing.JTextField txtVitalsPatientEncounterSymptoms;
    private javax.swing.JTextField txtVitalsPatientEncounterTime;
    private javax.swing.JTextField txtVitalsPatientFName;
    private javax.swing.JTextField txtVitalsPatientHeartRate;
    private javax.swing.JTextField txtVitalsPatientTemperature;
    // End of variables declaration//GEN-END:variables
    
    private void populateTable() {
        
        //here i am using getModel whose type is TableModel which is used to manipulate our table
        //here we are asking java to convert the ".getModel" whose type is tablemodel to DefaultTableModel using the constructor
        //inside the "()" brackets
        
        DefaultTableModel model = (DefaultTableModel)PatientEncountersjTable.getModel();
        model.setRowCount(0); //deleting the empty records in our JTable
        
        if (encHist.getEncounterList()!= null){     //if (encounterList.getEncounterList()!= null){
            for (Encounter enco : encHist.getEncounterList()) {//encounterList.getEncounterList()){
            Object[] row = new Object[9];
            row[0] = enco.getfName();
            row[1] = enco.getlName();//enco.getPatientId();
            row[2] = enco.getPatientId();
            row[3] = enco.getListOfDoctors();
            row[4] = enco.getEncounterId();
            row[5] = enco.getEncounterTime();
            row[6] = enco.getBloodType();
            row[7] = enco.getAdmitDate();
            row[8] = enco.getSymptoms();
            //row[9] = enco.getSymptoms();
            
            model.addRow(row);
        }
        
            
        }
        
        
        
    }

    private void displayData() {
        txtPatientFName.setText(personToWorkWith.getfName());
        txtPatientLName.setText(personToWorkWith.getlName());
        txtPatientAge.setText(String.valueOf(personToWorkWith.getAge()));
        txtPatientMobilePhn.setText(String.valueOf(personToWorkWith.getMobilePhn()));
        //txtPatientListOfDoctors.addItem(doctorToWorkWith.getfName()); //(doctorToWorkWith.getfName());
        for (Doctor d : docDr.getDoctorList()){
            
            txtPatientListOfDoctors.addItem(d.getfName());
        }
        
    }

    private void vanishDataInEncounterCreation() {
        txtPatientID.setText("");
        txtPatientFName.setText("");
        txtPatientLName.setText("");
        txtPatientAge.setText("");
        txtPatientMobilePhn.setText("");
        txtPatientEncounterID.setText("");
        txtPatientEncounterTime.setText("");
        txtPatientBloodType.setText("");
        txtPatientAdmitDate.setText("");
        txtPatientSymptoms.setText("");
        
    }
}


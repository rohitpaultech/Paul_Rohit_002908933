/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;


import java.awt.Image;
import javax.swing.Action;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.HumanResources;
import model.HumanResourcesHistory;


/**
 *
 * @author Rohit Paul G
 */
public class ViewJPanel extends javax.swing.JPanel {

    HumanResourcesHistory history;
     
    
    
   
    public ViewJPanel(HumanResourcesHistory history) {
        initComponents();
        this.history = history;
        
        //im creating a method that will populate the jTable after creation of employees
        
        populateTable();
        vaninshData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHumanResoures = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblTmInfo = new javax.swing.JLabel();
        txtTmInfo = new javax.swing.JTextField();
        lblPosTitle = new javax.swing.JLabel();
        txtPosTitle = new javax.swing.JTextField();
        lblCellPhn = new javax.swing.JLabel();
        txtCellPhn = new javax.swing.JTextField();
        lblEmailAdd = new javax.swing.JLabel();
        txtEmailAdd = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEmpId = new javax.swing.JLabel();
        txtEmpId = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblGendr = new javax.swing.JLabel();
        txtGendr = new javax.swing.JTextField();
        lblStrtDate = new javax.swing.JLabel();
        txtStrtDate = new javax.swing.JTextField();
        lblLvl = new javax.swing.JLabel();
        txtLvl = new javax.swing.JTextField();
        lblPhotoDisplay = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        txtSearchBar = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();

        setBackground(new java.awt.Color(205, 254, 204));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 102, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("~ View Employee ~");

        tblHumanResoures.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start Date", "Level", "Team Info", "Position Title", "Cell Phone Number", "Email Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHumanResoures.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHumanResouresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHumanResoures);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblTmInfo.setText("Team Info:");

        lblPosTitle.setText("Position Title:");

        lblCellPhn.setText("Cell Phone Number:");

        lblEmailAdd.setText("Email Address:");

        lblName.setText("Name:");

        lblEmpId.setText("Employee ID:");

        lblAge.setText("Age:");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblGendr.setText("Gender:");

        lblStrtDate.setText("Start Date:");

        lblLvl.setText("Level:");

        lblPhotoDisplay.setBackground(new java.awt.Color(255, 255, 255));
        lblPhotoDisplay.setOpaque(true);

        lblPhoto.setText("Photo:");

        txtSearchBar.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtSearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchBarActionPerformed(evt);
            }
        });
        txtSearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchBarKeyPressed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnView)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblName)
                                .addGap(18, 18, 18)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEmailAdd)
                                    .addComponent(lblAge)
                                    .addComponent(lblEmpId)
                                    .addComponent(lblGendr)
                                    .addComponent(lblStrtDate)
                                    .addComponent(lblLvl)
                                    .addComponent(lblTmInfo)
                                    .addComponent(lblPosTitle)
                                    .addComponent(lblCellPhn))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEmpId)
                                    .addComponent(txtAge)
                                    .addComponent(txtGendr)
                                    .addComponent(txtStrtDate)
                                    .addComponent(txtLvl)
                                    .addComponent(txtTmInfo)
                                    .addComponent(txtPosTitle)
                                    .addComponent(txtCellPhn)
                                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(88, 88, 88)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhoto)
                            .addComponent(lblPhotoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(154, 154, 154))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnUpdate, btnView});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(txtSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnView)
                            .addComponent(btnDelete)
                            .addComponent(btnUpdate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPhoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPhotoDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmpId)
                            .addComponent(txtEmpId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGendr)
                            .addComponent(txtGendr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStrtDate)
                            .addComponent(txtStrtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLvl)
                            .addComponent(txtLvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTmInfo)
                            .addComponent(txtTmInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPosTitle)
                            .addComponent(txtPosTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCellPhn)
                            .addComponent(txtCellPhn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmailAdd)
                            .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnUpdate, btnView});

    }// </editor-fold>//GEN-END:initComponents

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        
        //my code for delete feature 
        
        int selectedRowIndex = tblHumanResoures.getSelectedRow();
        
        if(selectedRowIndex < 0){
            
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;  //this means if user hasnt selected a row, we are showing above message and stopping her.
            
        }
        //the below process is to get to the HumanResources object, in order to that, we get the model as below
        DefaultTableModel model = (DefaultTableModel)tblHumanResoures.getModel();
       HumanResources selectedEmp = (HumanResources)model.getValueAt(selectedRowIndex, 0);
        
       history.deleteEmp(selectedEmp);
       
       JOptionPane.showMessageDialog(this, "Employee data deleted successfully!");
       
       populateTable(); 
       vaninshData(); 
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        
        //my code for view feature 
        
        int selectedRowIndex = tblHumanResoures.getSelectedRow();
        
        if(selectedRowIndex < 0){
            
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;  //this means if user hasnt selected a row, we are showing above message and stopping her.
            
        }
        
        //the below process is to get to the HumanResources object, in order to that, we get the model as below
        DefaultTableModel model = (DefaultTableModel)tblHumanResoures.getModel();
       HumanResources selectedEmp = (HumanResources)model.getValueAt(selectedRowIndex, 0);
       
       HumanResources updatedValues = (HumanResources)model.getValueAt(selectedRowIndex, 0);
       
       
       
       txtName.setText(updatedValues.getName()); //Note: If you define Name as double in HumanResources class, this line of code will throw error.
       //java throws error that says "double cannot be converted to string" since also setText is of string.
       //in order to over come this issue we use this line of code: txtName.setText(String.valueOf(selectedEmp.getName()));
       //But because we never defined our variable as double or anyother type other than string, we did notget an error in line 272.
       
       txtEmpId.setText(updatedValues.getEmpId());
       txtAge.setText(String.valueOf(updatedValues.getAge())); // corrected this line since i change my datatype from humanresources class
       txtGendr.setText(updatedValues.getGendr());
       txtStrtDate.setText(updatedValues.getStrtDate());
       txtLvl.setText(updatedValues.getLvl()); // corrected this line since i change my datatype from humanresources class
       txtTmInfo.setText(updatedValues.getTmInfo());
       txtPosTitle.setText(updatedValues.getPosTitle());
       txtCellPhn.setText(String.valueOf(updatedValues.getCellPhn())); // corrected this line since i change my datatype from humanresources class
       txtEmailAdd.setText(updatedValues.getEmailAdd());
     
       
        
       //below chunk is to display my saved photo to viewjpanel
        ImageIcon img = new ImageIcon(selectedEmp.getPhoto());
            Image imgSizing = img.getImage();
            Image imgOk = imgSizing.getScaledInstance(lblPhotoDisplay.getWidth(), lblPhotoDisplay.getHeight(), Image.SCALE_SMOOTH);
            
            lblPhotoDisplay.setIcon(new ImageIcon(imgOk));
        
            
            
           
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtSearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchBarActionPerformed
        
        //ignoring this section as this was clicked on by mistake
        
        
    }//GEN-LAST:event_txtSearchBarActionPerformed

    private void txtSearchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBarKeyPressed
        
        
        //the below section of code is for searching in my jTable
        DefaultTableModel DefaultTableModel;
        
        DefaultTableModel model = (DefaultTableModel)tblHumanResoures.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
        tblHumanResoures.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(txtSearchBar.getText().trim()));
        
        
        
    }//GEN-LAST:event_txtSearchBarKeyPressed

    private void tblHumanResouresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHumanResouresMouseClicked
        // below code did not work properly hence commenting the whole chunk.
        
        //DefaultTableModel tblModel = (DefaultTableModel)tblHumanResoures.getModel();
        //now setting data to textfields when a row selected
        //String tblName = tblModel.getValueAt(tblHumanResoures.getSelectedRow(), 0).toString();
        //String tblEmployeeID = tblModel.getValueAt(tblHumanResoures.getSelectedRow(), 0).toString();
        //String tblAge = tblModel.getValueAt(tblHumanResoures.getSelectedRow(), 0).toString();
        //String tblGender = tblModel.getValueAt(tblHumanResoures.getSelectedRow(), 0).toString();
        //String tblStartDate = tblModel.getValueAt(tblHumanResoures.getSelectedRow(), 0).toString();
   
        //txtName.setText(tblName);
        //txtEmpId.setText(tblEmployeeID);
        //txtAge.setText(tblAge);
        //txtGendr.setText(tblGender);
        //txtStrtDate.setText(tblStartDate);
        
        
    }//GEN-LAST:event_tblHumanResouresMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        //here i will get the table model
        DefaultTableModel tblModel = (DefaultTableModel)tblHumanResoures.getModel();
        if(tblHumanResoures.getSelectedRowCount()==1){
            //if i select a single row then should update
            String name = txtName.getText();
            String empid = txtEmpId.getText();
            int age = Integer.parseInt(txtAge.getText()); //String age = txtAge.getText(); ---> corrected this line since i changed my datatype in humanresources class
            String gender = txtGendr.getText();
            String strtDate = txtStrtDate.getText();
            String level = txtLvl.getText(); 
            String teaminfo = txtTmInfo.getText();
            String positiontitle = txtPosTitle.getText();
            long cellphonenumber = Long.parseLong(txtCellPhn.getText()); // corrected this line since i change my datatype in humanresources class
            String emailaddress = txtEmailAdd.getText();
            
            HumanResources hrupdate = history.getUpdateValues(empid);
            hrupdate.setName(name);
            hrupdate.setAge(age);
            hrupdate.setGendr(gender);
            hrupdate.setStrtDate(strtDate);
            hrupdate.setLvl(level);
            hrupdate.setTmInfo(teaminfo);
            hrupdate.setPosTitle(positiontitle);
            hrupdate.setCellPhn(cellphonenumber);
            hrupdate.setEmailAdd(emailaddress);
            populateTable();
            
            
            
            //BELOW CODE IS COMMENTED SINCE I FIGURED IT UNNECESSARY
            //to set updated value on table row
            //tblModel.setValueAt(name, tblHumanResoures.getSelectedRow(), 0);
            //tblModel.setValueAt(empid, tblHumanResoures.getSelectedRow(), 1);
            //tblModel.setValueAt(age, tblHumanResoures.getSelectedRow(), 2);
            //tblModel.setValueAt(gender, tblHumanResoures.getSelectedRow(), 3);
            //tblModel.setValueAt(startdate, tblHumanResoures.getSelectedRow(), 4);
            //tblModel.setValueAt(level, tblHumanResoures.getSelectedRow(), 5);
            //tblModel.setValueAt(teaminfo, tblHumanResoures.getSelectedRow(), 6);
            //tblModel.setValueAt(positiontitle, tblHumanResoures.getSelectedRow(), 7);
            //tblModel.setValueAt(cellphonenumber, tblHumanResoures.getSelectedRow(), 8);
            //tblModel.setValueAt(emailaddress, tblHumanResoures.getSelectedRow(), 9);
            
            
            //now insert a diplay message for updation
            JOptionPane.showMessageDialog(this, "Update done successfully!");
        } else{
            if(tblHumanResoures.getRowCount()==0){
                //this is when a table is empty and update button is clicked
                JOptionPane.showMessageDialog(this, "Table is empty.");
            } else{
                //this is when a table has records but user has not selected a record and clicks on update button
                JOptionPane.showMessageDialog(this, "Please select atleast one row for updation.");
            }
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellPhn;
    private javax.swing.JLabel lblEmailAdd;
    private javax.swing.JLabel lblEmpId;
    private javax.swing.JLabel lblGendr;
    private javax.swing.JLabel lblLvl;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhoto;
    public javax.swing.JLabel lblPhotoDisplay;
    private javax.swing.JLabel lblPosTitle;
    private javax.swing.JLabel lblStrtDate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTmInfo;
    private javax.swing.JTable tblHumanResoures;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellPhn;
    private javax.swing.JTextField txtEmailAdd;
    private javax.swing.JTextField txtEmpId;
    private javax.swing.JTextField txtGendr;
    private javax.swing.JTextField txtLvl;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPosTitle;
    private javax.swing.JTextField txtSearchBar;
    private javax.swing.JTextField txtStrtDate;
    private javax.swing.JTextField txtTmInfo;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        
        //here i am using getModel whose type is TableModel which is used to manipulate our table
        //here we are asking java to convert the ".getModel" whose type is tablemodel to DefaultTableModel using the constructor
        //inside the "()" brackets
        DefaultTableModel model = (DefaultTableModel)tblHumanResoures.getModel();
        model.setRowCount(0); //deleting the empty records in our JTable
        
        //now i will go thru humanresourceshistory by using a for loop
        
        for(HumanResources hr : history.getHistory()){
            
            Object[] row = new Object[10];  //in order to show lines in the jTable design we use a small array of objects with 10 members
            //one for each column
            row[0] = hr;
            row[1] = hr.getEmpId();
            row[2] = hr.getAge();
            row[3] = hr.getGendr();
            row[4] = hr.getStrtDate();
            row[5] = hr.getLvl();
            row[6] = hr.getTmInfo();
            row[7] = hr.getPosTitle();
            row[8] = hr.getCellPhn();
            row[9] = hr.getEmailAdd();
            
           
           model.addRow(row);
        }
        
    }

    private void vaninshData() {
        //method for clearing data
        txtName.setText("");
        txtEmpId.setText("");
        txtAge.setText("");
        txtGendr.setText("");
        txtStrtDate.setText("");
        txtLvl.setText("");
        txtTmInfo.setText("");
        txtPosTitle.setText("");
        txtCellPhn.setText("");
        txtEmailAdd.setText("");
        ImageIcon img = new ImageIcon();
        lblPhotoDisplay.setIcon(img);
        
    }
}
